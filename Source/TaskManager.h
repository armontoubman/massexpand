#pragma once
#include <BWAPI.h>
#include "HighCommand.h"
class HighCommand;

#include "Task.h"

using namespace BWAPI;

/**
 * The TaskManager collects Tasks that are generated by other managers and stores them for the TaskAssigner.
 */
class TaskManager {
public:
	TaskManager(HighCommand* h);
	void update();
	std::list<Task> getTasklist(TaskType tasktype);
	std::map<TaskType, std::list<Task>> getTasklists();
	bool existsTaskWithType(TaskType tasktype);
	std::string chat();
private:
	HighCommand* hc;
	std::map<TaskType, std::list<Task>> tasklistmap;

	/**
	 * Collects the Tasks from other managers. This is done by calling their getTaskList methods.
	 */
	void collectTasks();

	/**
	 * Generates ScoutTasks on all base locations
	 *	- if we have less than 60 units and the locations are not explored
	 *	- if we have more than 60 units and the locations are not visible
	 */
	void makeScoutTasksOnBaseLocations();
};